{"ast":null,"code":"// code paraphrased from node.js tonegenerator package\nvar shapes = {\n  sine: function (i, cycle, volume) {\n    // i / cycle => value between 0 and 1\n    // 0 = beginning of circly\n    // 0.25 Math.sin = 1\n    // 0.5 Math.sin = 0\n    // 0.75 Math.sin = -1\n    // 1 Math.sin = 1\n    return Math.min(volume * Math.sin(i / cycle * Math.PI * 2), volume - 1);\n  },\n  triangle: function (i, cycle, volume) {\n    var halfCycle = cycle / 2;\n    var level;\n\n    if (i < halfCycle) {\n      level = volume * 2 * (i / halfCycle) - volume;\n    } else {\n      i = i - halfCycle;\n      level = -(volume * 2) * (i / halfCycle) + volume;\n    }\n\n    return Math.min(level, volume - 1);\n  },\n  saw: function (i, cycle, volume) {\n    return Math.min(volume * 2 * (i / cycle) - volume, volume - 1);\n  },\n  square: function (i, cycle, volume) {\n    if (i > cycle / 2) {\n      return volume - 1;\n    }\n\n    return -volume;\n  }\n};\n\nfunction generateCycle(cycle, volume, shape) {\n  var data = [];\n  var tmp;\n  var generator = typeof shape == 'function' ? shape : shapes[shape];\n\n  if (!generator) {\n    throw new Error('Invalid wave form: \"' + shape + '\" choose between: ' + Object.keys(shapes));\n  }\n\n  for (var i = 0; i < cycle; i++) {\n    tmp = generator(i, cycle, volume);\n    data[i] = Math.round(tmp);\n  }\n\n  return data;\n}\n\nfunction tone(opts) {\n  opts = opts || {};\n  var freq = opts.freq || 440;\n  var rate = opts.rate || 44100;\n  var lengthInSecs = opts.lengthInSecs || 2.0;\n  var volume = opts.volume || 30;\n  var shape = opts.shape || 'sine';\n  var cycle = Math.floor(rate / freq);\n  var samplesLeft = lengthInSecs * rate;\n  var cycles = samplesLeft / cycle;\n  var ret = [];\n\n  for (var i = 0; i < cycles; i++) {\n    ret = ret.concat(generateCycle(cycle, volume, shape));\n  }\n\n  return ret;\n}\n\n;\n\nfunction harmony(freqs = 440, time = 3, shape = 'sine') {\n  if (typeof freqs === 'number') {\n    return tone({\n      freq: freqs,\n      lengthInSecs: time,\n      volume: tone.MAX_16,\n      rate: 44100,\n      shape: shape\n    });\n  } else if (freqs !== null && typeof freqs === 'object') {\n    let tones = [];\n    console.log('writing1');\n\n    for (let i = 0; i < freqs.length; i++) {\n      tones.push(tone({\n        freq: freqs[i],\n        lengthInSecs: time,\n        volume: tone.MAX_16 / 32,\n        rate: 44100,\n        shape: shape\n      }));\n    }\n\n    let samples = [];\n    console.log('writing2');\n\n    for (let i = 0; i < tones[0].length; i++) {\n      samples.push(0);\n\n      for (let j = 0; j < tones.length; j++) {\n        samples[i] += tones[j][i];\n      }\n\n      samples[i] /= tones.length;\n    }\n\n    return samples;\n  }\n}\n/*function melody(notes) {\n  let mel = []\n  for (let i = 0; i < notes.length; i++) {\n    mel = mel.concat(notes[i])\n  }\n  return mel\n}*/\n\n/*function writeAudio(samples) {\n  let file = fs.createWriteStream('components/audio/cur.wav')\n  file.write(header(samples.length * 2, { bitDepth: 16 }))\n  let data = Int16Array.from(samples)\n  let buffer = Buffer.allocUnsafe(data.length * 2) // 2 bytes per sample\n  data.forEach(function (value, index) {\n    buffer.writeInt16LE(value, index * 2)\n  })\n  file.write(buffer)\n  file.end()\n}*/\n\n\nconst scale = new Array(24).fill(1).map((elt, i) => Math.pow(2, i / 12));\n\nfunction getAudio(ops) {\n  const audio = [];\n  ops = {\n    playtime: parseFloat(ops.playtime),\n    fundamental: parseFloat(ops.fundamental),\n    shape: ops.shape,\n    root: parseInt(ops.root),\n    rootBNS: parseInt(ops.rootBNS),\n    triad: JSON.parse(ops.triad),\n    seventh: parseInt(ops.seventh),\n    ninth: parseInt(ops.ninth),\n    eleventh: parseInt(ops.eleventh),\n    thirteenth: parseInt(ops.thirteenth)\n  };\n  let root = ops.root + ops.rootBNS;\n  let third = ops.triad[0];\n  let fifth = ops.triad[1];\n  audio.push(ops.fundamental * scale[root]);\n  audio.push(ops.fundamental * scale[root + third]);\n  audio.push(ops.fundamental * scale[root + fifth]);\n  if (!isNaN(ops.seventh)) audio.push(ops.fundamental * scale[root + ops.seventh]);\n  if (!isNaN(ops.ninth)) audio.push(ops.fundamental * scale[root + ops.ninth]);\n  if (!isNaN(ops.eleventh)) audio.push(ops.fundamental * scale[root + ops.eleventh]);\n  if (!isNaN(ops.thirteenth)) audio.push(ops.fundamental * scale[root + ops.thirteenth]);\n  return audio;\n}\n\nfunction play(audio, playtime, shape) {\n  console.log(audio, playtime, shape);\n  let j = 0;\n  console.log('playing', j++);\n  const chord = harmony(audio, playtime, shape);\n  console.log('playing', j++);\n  const audioCtx = new AudioContext();\n  console.log('playing', j++);\n  let buffer = audioCtx.createBuffer(1, playtime * audioCtx.sampleRate, audioCtx.sampleRate);\n  console.log('playing', j++);\n  let bufferSet = buffer.getChannelData(0);\n  console.log('playing', j++);\n\n  for (let i = 0; i < playtime * audioCtx.sampleRate; i++) {\n    bufferSet[i] = chord[i] / 32;\n  }\n\n  console.log('playing', j++);\n  let source = audioCtx.createBufferSource();\n  console.log('playing', j++);\n  source.buffer = buffer;\n  console.log('playing', j++);\n  source.connect(audioCtx.destination);\n  console.log('playing', j++);\n  source.start();\n}\n\nconst Trytune = {\n  getAudio,\n  play\n};\nexport default Trytune;","map":{"version":3,"sources":["/Users/jimmy/Documents/trytune/src/components/trytune.js"],"names":["shapes","sine","i","cycle","volume","Math","min","sin","PI","triangle","halfCycle","level","saw","square","generateCycle","shape","data","tmp","generator","Error","Object","keys","round","tone","opts","freq","rate","lengthInSecs","floor","samplesLeft","cycles","ret","concat","harmony","freqs","time","MAX_16","tones","console","log","length","push","samples","j","scale","Array","fill","map","elt","pow","getAudio","ops","audio","playtime","parseFloat","fundamental","root","parseInt","rootBNS","triad","JSON","parse","seventh","ninth","eleventh","thirteenth","third","fifth","isNaN","play","chord","audioCtx","AudioContext","buffer","createBuffer","sampleRate","bufferSet","getChannelData","source","createBufferSource","connect","destination","start","Trytune"],"mappings":"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","sourcesContent":["// code paraphrased from node.js tonegenerator package\nvar shapes = {\n  sine: function (i, cycle, volume) {\n    // i / cycle => value between 0 and 1\n    // 0 = beginning of circly\n    // 0.25 Math.sin = 1\n    // 0.5 Math.sin = 0\n    // 0.75 Math.sin = -1\n    // 1 Math.sin = 1\n    return Math.min(volume * Math.sin((i/cycle) * Math.PI * 2), volume - 1);\n  },\n  triangle: function (i, cycle, volume) {\n    var halfCycle = cycle / 2\n    var level\n\n    if (i < halfCycle) {\n      level = (volume * 2) * (i / halfCycle) - volume;\n    } else {\n      i = i - halfCycle\n      level = -(volume * 2) * (i / halfCycle) + volume;\n    }\n\n    return Math.min(level, volume - 1);\n  },\n  saw: function (i, cycle, volume) {\n    return Math.min((volume * 2) * (i / cycle) - volume, volume - 1);\n  },\n  square: function (i, cycle, volume) {\n    if(i > cycle / 2) {\n      return volume - 1;\n    }\n\n    return -volume;\n  }\n}\n\nfunction generateCycle(cycle, volume, shape) {\n  var data = [];\n  var tmp;\n  var generator = typeof shape == 'function' ? shape : shapes[shape];\n  if (!generator) {\n    throw new Error('Invalid wave form: \"' + shape + '\" choose between: ' + Object.keys(shapes));\n  }\n\n  for(var i = 0; i < cycle; i++) {\n    tmp = generator(i, cycle, volume);\n    data[i] = Math.round(tmp);\n  }\n  return data;\n}\n\nfunction tone(opts) {\n  opts = opts || {}\n  var freq = opts.freq || 440;\n  var rate = opts.rate || 44100\n  var lengthInSecs = opts.lengthInSecs || 2.0;\n  var volume = opts.volume || 30;\n  var shape = opts.shape || 'sine';\n\n  var cycle = Math.floor(rate/freq);\n  var samplesLeft = lengthInSecs * rate;\n  var cycles = samplesLeft/cycle;\n  var ret = [];\n\n  for(var i = 0; i < cycles; i++) {\n    ret = ret.concat(generateCycle(cycle, volume, shape));\n  }\n\n  return ret;\n};\n\nfunction harmony(freqs=440, time=3, shape='sine') {\n  if (typeof freqs === 'number') {\n    return tone({\n      freq: freqs,\n      lengthInSecs: time,\n      volume: tone.MAX_16,\n      rate: 44100,\n      shape: shape,\n    })\n  } else if (freqs !== null && typeof freqs === 'object') {\n    let tones = []\n    console.log('writing1')\n    for (let i = 0; i < freqs.length; i++) {\n      tones.push(tone({\n        freq: freqs[i],\n        lengthInSecs: time,\n        volume: tone.MAX_16 / 32,\n        rate: 44100,\n        shape: shape,\n      }))\n    }\n    let samples = []\n    console.log('writing2')\n    for (let i = 0; i < tones[0].length; i++) {\n      samples.push(0)\n      for (let j = 0; j < tones.length; j++) {\n        samples[i] += tones[j][i]\n      }\n      samples[i] /= tones.length\n    }\n    return samples\n  }\n}\n\n/*function melody(notes) {\n  let mel = []\n  for (let i = 0; i < notes.length; i++) {\n    mel = mel.concat(notes[i])\n  }\n  return mel\n}*/\n\n/*function writeAudio(samples) {\n  let file = fs.createWriteStream('components/audio/cur.wav')\n  file.write(header(samples.length * 2, { bitDepth: 16 }))\n  let data = Int16Array.from(samples)\n  let buffer = Buffer.allocUnsafe(data.length * 2) // 2 bytes per sample\n  data.forEach(function (value, index) {\n    buffer.writeInt16LE(value, index * 2)\n  })\n  file.write(buffer)\n  file.end()\n}*/\nconst scale = new Array(24).fill(1).map((elt,i) => Math.pow(2,i/12))\n\nfunction getAudio(ops) {\n  const audio = []\n  ops = {\n    playtime: parseFloat(ops.playtime),\n    fundamental: parseFloat(ops.fundamental),\n    shape: ops.shape,\n    root: parseInt(ops.root),\n    rootBNS: parseInt(ops.rootBNS),\n    triad: JSON.parse(ops.triad),\n    seventh: parseInt(ops.seventh),\n    ninth: parseInt(ops.ninth),\n    eleventh: parseInt(ops.eleventh),\n    thirteenth: parseInt(ops.thirteenth),\n  }\n\n  let root = ops.root + ops.rootBNS\n  let third = ops.triad[0]\n  let fifth = ops.triad[1]\n  audio.push(ops.fundamental * scale[root])\n  audio.push(ops.fundamental * scale[root + third])\n  audio.push(ops.fundamental * scale[root + fifth])\n\n  if (!isNaN(ops.seventh))\n    audio.push(ops.fundamental * scale[root + ops.seventh])\n  if (!isNaN(ops.ninth))\n    audio.push(ops.fundamental * scale[root + ops.ninth])\n  if (!isNaN(ops.eleventh))\n    audio.push(ops.fundamental * scale[root + ops.eleventh])\n  if (!isNaN(ops.thirteenth))\n    audio.push(ops.fundamental * scale[root + ops.thirteenth])\n\n  return audio\n}\n\nfunction play(audio, playtime, shape) {\n  console.log(audio, playtime, shape)\n  let j = 0\n  console.log('playing',j++)\n  const chord = harmony(audio, playtime, shape)\n  console.log('playing',j++)\n  const audioCtx = new AudioContext()\n  console.log('playing',j++)\n  let buffer = audioCtx.createBuffer(1, playtime * audioCtx.sampleRate, audioCtx.sampleRate)\n  console.log('playing',j++)\n  let bufferSet = buffer.getChannelData(0)\n  console.log('playing',j++)\n  for (let i = 0; i < playtime * audioCtx.sampleRate; i++) {\n    bufferSet[i] = chord[i] / 32\n  }\n  console.log('playing',j++)\n  let source = audioCtx.createBufferSource()\n  console.log('playing',j++)\n  source.buffer = buffer\n  console.log('playing',j++)\n  source.connect(audioCtx.destination)\n  console.log('playing',j++)\n  source.start()\n}\n\nconst Trytune = {\n  getAudio,\n  play\n}\n\nexport default Trytune;\n"]},"metadata":{},"sourceType":"module"}